//git commands list//

git init
git status

git add /имя файла/ //добавить изменения в INDEX git, подготовка к коммиту

git commit //откроеться рредактор по умолчанию для написания текста коммита
git commit -m "текст коммита" //если одним словом то без ""

git rm // уадляет из рабочей директории + удаляет из индекса
git rm -r --cached //удалит из индекса но оставит в рабочем каталоге
--cached //операция проводиться только с INDEX  не затрагивает рабочую директорию.
git rm -f //флаг -f игнорирует предупреждения при выполнении операций

//Ветки//

git branch //список веток
git branch -v //список ветов к указанием коммита с которого она начата
git branch feature //создать нову ветку  feature - название ветки.
git checkout feature //переключиться на другую ветку feature - название ветки
git checkout -b feature //создать ветку и сразу переключиться на нее
git checkout -f master //перейти к другой ветке, стерев все не закомиченные изменения в текущей -f сокращенный вариант --forse
git checkout -f HEAD //стереть не закомиченные изменения в текущей ветке. Так как HEAD ссылка на текущую ветку
git checkout 9e28  //9e28  идентификатор коммита, можно перейти не только на ветку но и на коммит, нужно написать номер коммита
при таком использовании возникает ситуация оделенной HEAD.
git cherry-pick 9e28 // 9e28  идентификатор коммита, перенести в ветку
git chekout 54a4 index.html //востановить отдельный файл из конретного коммита, 54a4 -идентификатор коммита index.html файл
git chekout HEAD index.html //востановить отдельный файл из последнего коммита


